<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".." name="SALVADOR.HTTP" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <description>HTTP targets of the SUB Ant library</description>

    <!-- Maven coordinates of apache HTTP client -->
    <property name="salvador.httpclient.group.id" value="org.apache.httpcomponents"/>
    <property name="salvador.httpclient.artifact.id" value="httpclient"/>
    <property name="salvador.httpclient.version" value="4.3.1"/>
    <property name="salvador.httpmime.group.id" value="org.apache.httpcomponents"/>
    <property name="salvador.httpmime.artifact.id" value="httpmime"/>
    <property name="salvador.httpmime.version" value="4.3.1"/>

    <!-- Import base lib -->
    <import file="../build.xml"/>
    <!-- Import Groovy -->
    <import file="./groovy.xml"/>

    <target name="salvador.http.macros" depends="salvador.groovy.install, salvador.base.ant.contrib.install">
        <!-- Get required artifacts first, since Grapes don't work always as expected :-( -->
        <artifact:dependencies filesetId="salvador.httpclient.files" pathId="salvador.httpclient.classpath">
            <dependency groupId="${salvador.httpclient.group.id}" artifactId="${salvador.httpclient.artifact.id}" version="${salvador.httpclient.version}"/>
            <dependency groupId="${salvador.httpmime.group.id}" artifactId="${salvador.httpmime.artifact.id}" version="${salvador.httpmime.version}"/>
            <!-- Dependencies, that change not so much -->
            <dependency groupId="commons-codec" artifactId="commons-codec" version="1.6"/>
            <dependency groupId="commons-logging" artifactId="commons-logging" version="1.1.3"/>
        </artifact:dependencies>
        <macrodef name="salvador.http.postfile.multipart">
            <attribute name="url"/>
            <attribute name="file"/>
            <attribute name="name"/>
            <attribute name="param.name" default="file"/>
            <sequential>
                <!-- This is a ugly hack, see:
                     http://groovy.329449.n5.nabble.com/Accessing-Ant-macrodef-parameters-in-groovy-Ant-task-td358094.html
                -->
                <var name="urlProp" value="@{url}"/>
                <var name="fileProp" value="@{file}"/>
                <var name="nameProp" value="@{name}"/>
                <var name="param.nameProp" value="@{param.name}"/>

                <groovy useGroovyShell="true"
                    >
                    /* Needed dependencies */
                    @Grapes([
                        @Grab(group='org.apache.httpcomponents', module='httpclient', version='4.3.1'),
                        @Grab(group='org.apache.httpcomponents', module='httpmime', version='4.3.1')
                    ])
                    
                    /* Needed imports */
                    import org.apache.http.*
                    import org.apache.http.client.*
                    import org.apache.http.entity.mime.*
                    import org.apache.http.entity.mime.content.*
                    import org.apache.http.impl.client.*
                    import org.apache.http.client.methods.*
                    
                    /* Get variables from ant */
                    def filePath = new File(properties['fileProp'])
                    def fileName = properties['nameProp']
                    def url = new URL(properties['urlProp'])
                    def paramName = properties['param.nameProp']
                    
                    /* See http://stackoverflow.com/questions/1378920/how-can-i-make-a-multipart-form-data-post-request-using-java */
                    HttpClient httpclient = new DefaultHttpClient();
                    HttpPost httppost = new HttpPost(url.toURI());
                    
                    FileBody bin = new FileBody(filePath);
                    StringBody comment = new StringBody("Filename: " + fileName);
                    
                    MultipartEntity reqEntity = new MultipartEntity();
                    reqEntity.addPart(paramName, bin);
                    reqEntity.addPart("comment", comment);
                    httppost.setEntity(reqEntity);
                    
                    HttpResponse response = httpclient.execute(httppost);
                    HttpEntity resEntity = response.getEntity();
                    
                    httpclient.getConnectionManager().shutdown();
                </groovy>
            </sequential>
        </macrodef>
        
        <!-- 
        See http://mrhaki.blogspot.de/2009/03/use-restclient-to-post-and-read-xml.html
        -->
        <macrodef name="salvador.http.postfile">
            <attribute name="url"/>
            <attribute name="file"/>
            <attribute name="mimetype"/>
            <sequential>
                <var name="urlProp" value="@{url}"/>
                <var name="fileProp" value="@{file}"/>
                <var name="mimetypeProp" value="@{mimetype}"/>

                <groovy useGroovyShell="true"
                    >
                    /* Needed dependencies */
                    @Grapes([
                        @Grab(group='org.apache.httpcomponents', module='httpclient', version='4.3.1'),
                        @Grab(group='org.apache.httpcomponents', module='httpmime', version='4.3.1')
                    ])
                    /*
                        Grapes seem to use Ivy internaly so this is expected to fail in crude ways.
                        Try 'grape -debug install org.apache.httpcomponents httpclient 4.3.1'
                        Or try again with maven, this will work:
                        mvn org.apache.maven.plugins:maven-dependency-plugin:2.8:get -Dartifact=org.apache.httpcomponents:httpclient:4.3.1
                    */
                    
                    /* Needed imports */
                    import org.apache.http.*
                    import org.apache.http.client.*
                    import org.apache.http.entity.*
                    import org.apache.http.client.methods.*
                    import org.apache.http.impl.client.*
                    import org.apache.http.util.*
                    
                    /* Get variable from ant */
                    def url = new URL(properties['urlProp'])
                    def file = new File(properties['fileProp'])
                    def mimetype = properties['mimetypeProp']
                    
                    HttpClient httpclient = new DefaultHttpClient()
                    HttpPost httppost = new HttpPost(url.toURI())
                    ContentType type = ContentType.create(mimetype)
                    
                    /*
                        See http://stackoverflow.com/questions/9848557/how-to-send-xml-post-request-using-apache-httpclient
                    */
                    HttpEntity entity = new FileEntity(file, type)
                    httppost.setEntity(entity)
                    HttpResponse response = httpclient.execute(httppost)
                    if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {
                        HttpEntity respEntity = response.getEntity()
                        println EntityUtils.toString(respEntity)
                    }
                    httpclient.getConnectionManager().shutdown()
                </groovy>
            </sequential>
        </macrodef>
        
        <!-- Our own Get Task since Ant is to stupid to handle redirects fo example those done by Sourceforge, see:
             https://issues.apache.org/bugzilla/show_bug.cgi?id=47433
             See here if you want to reassamble the bahavoir of Ant:
             https://git-wip-us.apache.org/repos/asf?p=ant.git;a=blob;f=src/main/org/apache/tools/ant/taskdefs/Get.java;h=0f6cd689fc20f5cf5df72978fbd06fba5f63d032;hb=HEAD
        -->
        <macrodef name="salvador.http.get">
            <attribute name="src"/>
            <attribute name="dest"/>
            <sequential>
                <var name="srcProp" value="@{src}"/>
                <var name="destProp" value="@{dest}"/>
                <groovy useGroovyShell="true">
                    /* Get variable from ant */
                    def src = properties['srcProp']
                    def dest = new File(properties['destProp'])
                    def mimetype = properties['mimetypeProp']
                    
                    def out = new BufferedOutputStream(new FileOutputStream(dest))
                    out &lt;&lt; new URL(src).openStream()
                    out.close()
                </groovy>
            </sequential>
        </macrodef>
    </target>

</project>
